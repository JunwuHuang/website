"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9575],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return h}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=u(t),h=a,f=s["".concat(l,".").concat(h)]||s[h]||d[h]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=s;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},7570:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return l}});var r=t(3117),a=(t(7294),t(3905));const o={},i="LRU \u7f13\u5b58",c={type:"mdx",permalink:"/website/leetcode/lru-cache/",source:"@site/src/pages/leetcode/lru-cache/index.md",title:"LRU \u7f13\u5b58",description:"2022/12/04",frontMatter:{}},l=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:2},{value:"\u793a\u4f8b\u4e00",id:"\u793a\u4f8b\u4e00",level:3},{value:"\u9898\u89e3\u53c2\u8003",id:"\u9898\u89e3\u53c2\u8003",level:2},{value:"\u54c8\u5e0c\u8868\u4e0e\u53cc\u5411\u94fe\u8868",id:"\u54c8\u5e0c\u8868\u4e0e\u53cc\u5411\u94fe\u8868",level:3}],u={toc:l};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"lru-\u7f13\u5b58"},"LRU \u7f13\u5b58"),(0,a.kt)("p",null,"2022/12/04"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/lru-cache/"},"https://leetcode.cn/problems/lru-cache/"))),(0,a.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,a.kt)("h3",{id:"\u793a\u4f8b\u4e00"},"\u793a\u4f8b\u4e00"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'\u8f93\u5165\n["LRUCache", "put", "put", "get", "put", "get", "put", "get", "get", "get"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n\u8f93\u51fa\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n\u89e3\u91ca\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // \u7f13\u5b58\u662f {1=1}\nlRUCache.put(2, 2); // \u7f13\u5b58\u662f {1=1, 2=2}\nlRUCache.get(1);    // \u8fd4\u56de 1\nlRUCache.put(3, 3); // \u8be5\u64cd\u4f5c\u4f1a\u4f7f\u5f97\u5173\u952e\u5b57 2 \u4f5c\u5e9f\uff0c\u7f13\u5b58\u662f {1=1, 3=3}\nlRUCache.get(2);    // \u8fd4\u56de -1 (\u672a\u627e\u5230)\nlRUCache.put(4, 4); // \u8be5\u64cd\u4f5c\u4f1a\u4f7f\u5f97\u5173\u952e\u5b57 1 \u4f5c\u5e9f\uff0c\u7f13\u5b58\u662f {4=4, 3=3}\nlRUCache.get(1);    // \u8fd4\u56de -1 (\u672a\u627e\u5230)\nlRUCache.get(3);    // \u8fd4\u56de 3\nlRUCache.get(4);    // \u8fd4\u56de 4\n')),(0,a.kt)("h2",{id:"\u9898\u89e3\u53c2\u8003"},"\u9898\u89e3\u53c2\u8003"),(0,a.kt)("h3",{id:"\u54c8\u5e0c\u8868\u4e0e\u53cc\u5411\u94fe\u8868"},"\u54c8\u5e0c\u8868\u4e0e\u53cc\u5411\u94fe\u8868"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"function LinkedNode(key, value) {\n    this.key = key\n    this.value = value\n    this.next = null\n    this.prev = null\n    return this\n}\n\n/**\n * @param {number} capacity\n */\nvar LRUCache = function(capacity) {\n    this.size = 0\n    this.capacity = capacity\n    this.head = new LinkedNode()\n    this.tail = new LinkedNode()\n    this.head.next = this.tail\n    this.tail.prev = this.head\n    this.cache = new Map()\n\n    this.removeNode = function(node) {\n        node.prev.next = node.next\n        node.next.prev = node.prev\n    }\n\n    this.addToHead = function(node) {\n        node.prev = this.head\n        node.next = this.head.next\n        this.head.next.prev = node\n        this.head.next = node\n    }\n\n    this.moveToHead = function(node) {\n        this.removeNode(node)\n        this.addToHead(node)\n    }\n\n    this.removeTail = function() {\n        const res = this.tail.prev\n        this.removeNode(res)\n        return res\n    }\n};\n\n/** \n * @param {number} key\n * @return {number}\n */\nLRUCache.prototype.get = function(key) {\n    const node = this.cache.get(key)\n    if (node === undefined || node === null) {\n        return -1\n    }\n    this.moveToHead(node)\n    return node.value\n};\n\n/** \n * @param {number} key \n * @param {number} value\n * @return {void}\n */\nLRUCache.prototype.put = function(key, value) {\n    const node = this.cache.get(key)\n    if (node !== undefined && node !== null) {\n        node.value = value\n        this.moveToHead(node)\n        return\n    }\n    const newNode = new LinkedNode(key, value)\n    this.cache.set(key, newNode)\n    this.addToHead(newNode)\n    this.size++\n    if (this.size > this.capacity) {\n        const tail = this.removeTail()\n        this.cache.delete(tail.key)\n        --this.size\n    }\n};\n")))}p.isMDXComponent=!0}}]);