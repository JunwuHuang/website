"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4253],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),f=c(n),m=l,d=f["".concat(s,".").concat(m)]||f[m]||u[m]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,i=new Array(o);i[0]=f;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:l,i[1]=a;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3052:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return o},metadata:function(){return a},toc:function(){return s}});var r=n(3117),l=(n(7294),n(3905));const o={},i="\u5408\u5e76 K \u4e2a\u5347\u5e8f\u94fe\u8868",a={type:"mdx",permalink:"/website/leetcode/merge-k-sorted-lists/",source:"@site/src/pages/leetcode/merge-k-sorted-lists/index.md",title:"\u5408\u5e76 K \u4e2a\u5347\u5e8f\u94fe\u8868",description:"2022/08/12",frontMatter:{}},s=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:2},{value:"\u793a\u4f8b\u4e00",id:"\u793a\u4f8b\u4e00",level:3},{value:"\u793a\u4f8b\u4e8c",id:"\u793a\u4f8b\u4e8c",level:3},{value:"\u793a\u4f8b\u4e09",id:"\u793a\u4f8b\u4e09",level:3},{value:"\u9898\u89e3\u53c2\u8003",id:"\u9898\u89e3\u53c2\u8003",level:2},{value:"\u5206\u6cbb\u5408\u5e76",id:"\u5206\u6cbb\u5408\u5e76",level:3}],c={toc:s};function p(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u5408\u5e76-k-\u4e2a\u5347\u5e8f\u94fe\u8868"},"\u5408\u5e76 K \u4e2a\u5347\u5e8f\u94fe\u8868"),(0,l.kt)("p",null,"2022/08/12"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/merge-k-sorted-lists/"},"https://leetcode.cn/problems/merge-k-sorted-lists/"))),(0,l.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,l.kt)("h3",{id:"\u793a\u4f8b\u4e00"},"\u793a\u4f8b\u4e00"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u8f93\u5165\uff1alists = [[1,4,5],[1,3,4],[2,6]]\n\u8f93\u51fa\uff1a[1,1,2,3,4,4,5,6]\n\u89e3\u91ca\uff1a\u94fe\u8868\u6570\u7ec4\u5982\u4e0b\uff1a\n[\n  1->4->5,\n  1->3->4,\n  2->6\n]\n\u5c06\u5b83\u4eec\u5408\u5e76\u5230\u4e00\u4e2a\u6709\u5e8f\u94fe\u8868\u4e2d\u5f97\u5230\u3002\n1->1->2->3->4->4->5->6\n")),(0,l.kt)("h3",{id:"\u793a\u4f8b\u4e8c"},"\u793a\u4f8b\u4e8c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u8f93\u5165\uff1alists = []\n\u8f93\u51fa\uff1a[]\n")),(0,l.kt)("h3",{id:"\u793a\u4f8b\u4e09"},"\u793a\u4f8b\u4e09"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u8f93\u5165\uff1alists = [[]]\n\u8f93\u51fa\uff1a[]\n")),(0,l.kt)("h2",{id:"\u9898\u89e3\u53c2\u8003"},"\u9898\u89e3\u53c2\u8003"),(0,l.kt)("p",null,"\u8be5\u9898\u7684\u57fa\u7840\u662f\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868\uff1a\n",(0,l.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/merge-two-sorted-lists"},"https://leetcode.cn/problems/merge-two-sorted-lists")),(0,l.kt)("h3",{id:"\u5206\u6cbb\u5408\u5e76"},"\u5206\u6cbb\u5408\u5e76"),(0,l.kt)("p",null,"\u76f8\u6bd4\u987a\u5e8f\u5408\u5e76\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u63d0\u5347\u3002\u5c06\u94fe\u8868\u5148\u4e24\u4e24\u5408\u5e76\uff0c\u540e\u518d\u5c06\u5408\u5e76\u540e\u7684\u94fe\u8868\u518d\u9012\u5f52\uff1b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"var mergeTwoLists = function (l1, l2) {\n  const prehead = new ListNode(-1);\n\n  let prev = prehead;\n  while (l1 != null && l2 != null) {\n    if (l1.val <= l2.val) {\n      prev.next = l1;\n      l1 = l1.next;\n    } else {\n      prev.next = l2;\n      l2 = l2.next;\n    }\n    prev = prev.next;\n  }\n\n  // \u5408\u5e76\u540e l1 \u548c l2 \u6700\u591a\u53ea\u6709\u4e00\u4e2a\u8fd8\u672a\u88ab\u5408\u5e76\u5b8c\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u94fe\u8868\u672b\u5c3e\u6307\u5411\u672a\u5408\u5e76\u5b8c\u7684\u94fe\u8868\u5373\u53ef\n  prev.next = l1 === null ? l2 : l1;\n\n  return prehead.next;\n};\n\nvar merge = function (lists, left, right) {\n  if (left === right) return lists[left];\n  if (left > right) return null;\n  const mid = (left + right) >> 1;\n  return mergeTwoLists(merge(lists, left, mid), merge(lists, mid + 1, right));\n};\n\nvar mergeKLists = function (lists) {\n  return merge(lists, 0, lists.length - 1);\n};\n")))}p.isMDXComponent=!0}}]);