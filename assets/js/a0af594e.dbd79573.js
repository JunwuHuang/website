"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1887],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=p(t),d=a,m=f["".concat(l,".").concat(d)]||f[d]||s[d]||i;return t?r.createElement(m,o(o({ref:n},u),{},{components:t})):r.createElement(m,o({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=f;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9351:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return l}});var r=t(3117),a=(t(7294),t(3905));const i={},o="\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d",c={type:"mdx",permalink:"/website/leetcode/regular-expression-matching/",source:"@site/src/pages/leetcode/regular-expression-matching/index.md",title:"\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d",description:"2022/07/31",frontMatter:{}},l=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:2},{value:"\u793a\u4f8b\u4e00",id:"\u793a\u4f8b\u4e00",level:3},{value:"\u793a\u4f8b\u4e8c",id:"\u793a\u4f8b\u4e8c",level:3},{value:"\u793a\u4f8b\u4e09",id:"\u793a\u4f8b\u4e09",level:3},{value:"\u9898\u89e3\u53c2\u8003",id:"\u9898\u89e3\u53c2\u8003",level:2},{value:"\u52a8\u6001\u89c4\u5212",id:"\u52a8\u6001\u89c4\u5212",level:3}],p={toc:l};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d"},"\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d"),(0,a.kt)("p",null,"2022/07/31"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/regular-expression-matching/"},"https://leetcode.cn/problems/regular-expression-matching/"))),(0,a.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,a.kt)("h3",{id:"\u793a\u4f8b\u4e00"},"\u793a\u4f8b\u4e00"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'\u8f93\u5165\uff1as = "aa", p = "a"\n\u8f93\u51fa\uff1afalse\n\u89e3\u91ca\uff1a"a" \u65e0\u6cd5\u5339\u914d "aa" \u6574\u4e2a\u5b57\u7b26\u4e32\u3002\n')),(0,a.kt)("h3",{id:"\u793a\u4f8b\u4e8c"},"\u793a\u4f8b\u4e8c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"\u8f93\u5165\uff1as = \"aa\", p = \"a*\"\n\u8f93\u51fa\uff1atrue\n\u89e3\u91ca\uff1a\u56e0\u4e3a '*' \u4ee3\u8868\u53ef\u4ee5\u5339\u914d\u96f6\u4e2a\u6216\u591a\u4e2a\u524d\u9762\u7684\u90a3\u4e00\u4e2a\u5143\u7d20, \u5728\u8fd9\u91cc\u524d\u9762\u7684\u5143\u7d20\u5c31\u662f 'a'\u3002\u56e0\u6b64\uff0c\u5b57\u7b26\u4e32 \"aa\" \u53ef\u88ab\u89c6\u4e3a 'a' \u91cd\u590d\u4e86\u4e00\u6b21\u3002\n")),(0,a.kt)("h3",{id:"\u793a\u4f8b\u4e09"},"\u793a\u4f8b\u4e09"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'\u8f93\u5165\uff1as = "ab", p = ".*"\n\u8f93\u51fa\uff1atrue\n\u89e3\u91ca\uff1a".*" \u8868\u793a\u53ef\u5339\u914d\u96f6\u4e2a\u6216\u591a\u4e2a\uff08\'*\'\uff09\u4efb\u610f\u5b57\u7b26\uff08\'.\'\uff09\u3002\n')),(0,a.kt)("h2",{id:"\u9898\u89e3\u53c2\u8003"},"\u9898\u89e3\u53c2\u8003"),(0,a.kt)("h3",{id:"\u52a8\u6001\u89c4\u5212"},"\u52a8\u6001\u89c4\u5212"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/regular-expression-matching/solution/dong-tai-gui-hua-zen-yao-cong-0kai-shi-si-kao-da-b/"},"\u52a8\u6001\u89c4\u5212 - \u4ece 0 \u8bb2\u89e3\uff0c\u5927\u767d\u8bdd\u597d\u7406\u89e3")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"}," var isMatch = function(s, p) {\n    const m = s.length\n    const n = p.length\n\n    const dp = [[true]]\n\n    for (let i = 0; i <= m; ++i) {\n        if (!Array.isArray(dp[i])) {\n            dp[i] = []\n        }\n        for (let j = 1; j <= n; ++j) {\n            if (p.charAt(j - 1) === '*') {\n                dp[i][j] = dp[i][j - 2]\n                if (matches(s, p, i, j - 1)) {\n                    dp[i][j] = dp[i][j] || dp[i - 1][j]\n                }\n            } else {\n                if (matches(s, p, i, j)) {\n                    dp[i][j] = dp[i - 1][j - 1]\n                }\n            }\n        }\n    }\n    return !!dp[m][n]\n};\n\nfunction matches(s, p, i, j) {\n    if (i === 0) {\n        return false\n    }\n    if (p.charAt(j - 1) === '.') {\n        return true\n    }\n    return s.charAt(i - 1) === p.charAt(j - 1)\n}\n")))}u.isMDXComponent=!0}}]);