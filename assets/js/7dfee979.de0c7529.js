"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[146],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return y}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},u=Object.keys(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,u=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=i(n),y=o,d=f["".concat(l,".").concat(y)]||f[y]||s[y]||u;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var u=n.length,a=new Array(u);a[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var i=2;i<u;i++)a[i]=n[i];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3886:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return a},default:function(){return p},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return l}});var r=n(3117),o=(n(7294),n(3905));const u={},a="\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217",c={type:"mdx",permalink:"/website/leetcode/queue-reconstruction-by-height/",source:"@site/src/pages/leetcode/queue-reconstruction-by-height/index.md",title:"\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217",description:"2022/10/28",frontMatter:{}},l=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:2},{value:"\u793a\u4f8b\u4e00",id:"\u793a\u4f8b\u4e00",level:3},{value:"\u793a\u4f8b\u4e8c",id:"\u793a\u4f8b\u4e8c",level:3},{value:"\u601d\u8003\u8fc7\u7a0b",id:"\u601d\u8003\u8fc7\u7a0b",level:2},{value:"\u8d2a\u5fc3",id:"\u8d2a\u5fc3",level:3}],i={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217"},"\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217"),(0,o.kt)("p",null,"2022/10/28"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/queue-reconstruction-by-height/"},"https://leetcode.cn/problems/queue-reconstruction-by-height/"))),(0,o.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,o.kt)("h3",{id:"\u793a\u4f8b\u4e00"},"\u793a\u4f8b\u4e00"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"\u8f93\u5165\uff1apeople = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]\n\u8f93\u51fa\uff1a[[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]\n\u89e3\u91ca\uff1a\n\u7f16\u53f7\u4e3a 0 \u7684\u4eba\u8eab\u9ad8\u4e3a 5 \uff0c\u6ca1\u6709\u8eab\u9ad8\u66f4\u9ad8\u6216\u8005\u76f8\u540c\u7684\u4eba\u6392\u5728\u4ed6\u524d\u9762\u3002\n\u7f16\u53f7\u4e3a 1 \u7684\u4eba\u8eab\u9ad8\u4e3a 7 \uff0c\u6ca1\u6709\u8eab\u9ad8\u66f4\u9ad8\u6216\u8005\u76f8\u540c\u7684\u4eba\u6392\u5728\u4ed6\u524d\u9762\u3002\n\u7f16\u53f7\u4e3a 2 \u7684\u4eba\u8eab\u9ad8\u4e3a 5 \uff0c\u6709 2 \u4e2a\u8eab\u9ad8\u66f4\u9ad8\u6216\u8005\u76f8\u540c\u7684\u4eba\u6392\u5728\u4ed6\u524d\u9762\uff0c\u5373\u7f16\u53f7\u4e3a 0 \u548c 1 \u7684\u4eba\u3002\n\u7f16\u53f7\u4e3a 3 \u7684\u4eba\u8eab\u9ad8\u4e3a 6 \uff0c\u6709 1 \u4e2a\u8eab\u9ad8\u66f4\u9ad8\u6216\u8005\u76f8\u540c\u7684\u4eba\u6392\u5728\u4ed6\u524d\u9762\uff0c\u5373\u7f16\u53f7\u4e3a 1 \u7684\u4eba\u3002\n\u7f16\u53f7\u4e3a 4 \u7684\u4eba\u8eab\u9ad8\u4e3a 4 \uff0c\u6709 4 \u4e2a\u8eab\u9ad8\u66f4\u9ad8\u6216\u8005\u76f8\u540c\u7684\u4eba\u6392\u5728\u4ed6\u524d\u9762\uff0c\u5373\u7f16\u53f7\u4e3a 0\u30011\u30012\u30013 \u7684\u4eba\u3002\n\u7f16\u53f7\u4e3a 5 \u7684\u4eba\u8eab\u9ad8\u4e3a 7 \uff0c\u6709 1 \u4e2a\u8eab\u9ad8\u66f4\u9ad8\u6216\u8005\u76f8\u540c\u7684\u4eba\u6392\u5728\u4ed6\u524d\u9762\uff0c\u5373\u7f16\u53f7\u4e3a 1 \u7684\u4eba\u3002\n\u56e0\u6b64 [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] \u662f\u91cd\u65b0\u6784\u9020\u540e\u7684\u961f\u5217\u3002\n")),(0,o.kt)("h3",{id:"\u793a\u4f8b\u4e8c"},"\u793a\u4f8b\u4e8c"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"\u8f93\u5165\uff1apeople = [[6,0],[5,0],[4,0],[3,2],[2,2],[1,4]]\n\u8f93\u51fa\uff1a[[4,0],[5,0],[2,2],[3,2],[1,4],[6,0]]\n")),(0,o.kt)("h2",{id:"\u601d\u8003\u8fc7\u7a0b"},"\u601d\u8003\u8fc7\u7a0b"),(0,o.kt)("h3",{id:"\u8d2a\u5fc3"},"\u8d2a\u5fc3"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/queue-reconstruction-by-height/solution/406du-shuo-shi-tan-xin-na-yao-wei-shi-yao-yong-tan/"},"https://leetcode.cn/problems/queue-reconstruction-by-height/solution/406du-shuo-shi-tan-xin-na-yao-wei-shi-yao-yong-tan/")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"var reconstructQueue = function(people) {\n    let queue = []\n    people.sort((a, b ) => {\n        if(b[0] !== a[0]) {\n            return b[0] - a[0]\n        } else {\n            return a[1] - b[1]\n        }\n        \n    })\n\n    for(let i = 0; i < people.length; i++) {\n        queue.splice(people[i][1], 0, people[i])\n    }\n    return queue\n};\n")))}p.isMDXComponent=!0}}]);