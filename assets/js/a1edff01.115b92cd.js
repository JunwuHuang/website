"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6057],{3905:function(n,e,t){t.d(e,{Zo:function(){return s},kt:function(){return p}});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var u=r.createContext({}),c=function(n){var e=r.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},s=function(n){var e=c(n.components);return r.createElement(u.Provider,{value:e},n.children)},m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,a=n.originalType,u=n.parentName,s=i(n,["components","mdxType","originalType","parentName"]),d=c(t),p=o,f=d["".concat(u,".").concat(p)]||d[p]||m[p]||a;return t?r.createElement(f,l(l({ref:e},s),{},{components:t})):r.createElement(f,l({ref:e},s))}));function p(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var a=t.length,l=new Array(a);l[0]=d;var i={};for(var u in e)hasOwnProperty.call(e,u)&&(i[u]=e[u]);i.originalType=n,i.mdxType="string"==typeof n?n:o,l[1]=i;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7620:function(n,e,t){t.r(e),t.d(e,{contentTitle:function(){return l},default:function(){return s},frontMatter:function(){return a},metadata:function(){return i},toc:function(){return u}});var r=t(3117),o=(t(7294),t(3905));const a={},l="\u5bfb\u627e\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570",i={type:"mdx",permalink:"/website/leetcode/median-of-two-sorted-arrays/",source:"@site/src/pages/leetcode/median-of-two-sorted-arrays/index.md",title:"\u5bfb\u627e\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570",description:"2022/07/04",frontMatter:{}},u=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:2},{value:"\u793a\u4f8b\u4e00",id:"\u793a\u4f8b\u4e00",level:3},{value:"\u793a\u4f8b\u4e8c",id:"\u793a\u4f8b\u4e8c",level:3},{value:"\u601d\u8003\u8fc7\u7a0b",id:"\u601d\u8003\u8fc7\u7a0b",level:2},{value:"\u9898\u89e3\u53c2\u8003\uff0c\u4e8c\u5206\u67e5\u627e",id:"\u9898\u89e3\u53c2\u8003\u4e8c\u5206\u67e5\u627e",level:3}],c={toc:u};function s(n){let{components:e,...t}=n;return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u5bfb\u627e\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570"},"\u5bfb\u627e\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570"),(0,o.kt)("p",null,"2022/07/04"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/median-of-two-sorted-arrays/"},"https://leetcode.cn/problems/median-of-two-sorted-arrays/"))),(0,o.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,o.kt)("h3",{id:"\u793a\u4f8b\u4e00"},"\u793a\u4f8b\u4e00"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"\u8f93\u5165\uff1anums1 = [1,3], nums2 = [2]\n\u8f93\u51fa\uff1a2.00000\n\u89e3\u91ca\uff1a\u5408\u5e76\u6570\u7ec4 = [1,2,3] \uff0c\u4e2d\u4f4d\u6570 2\n")),(0,o.kt)("h3",{id:"\u793a\u4f8b\u4e8c"},"\u793a\u4f8b\u4e8c"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"\u8f93\u5165\uff1anums1 = [1,2], nums2 = [3,4]\n\u8f93\u51fa\uff1a2.50000\n\u89e3\u91ca\uff1a\u5408\u5e76\u6570\u7ec4 = [1,2,3,4] \uff0c\u4e2d\u4f4d\u6570 (2 + 3) / 2 = 2.5\n")),(0,o.kt)("h2",{id:"\u601d\u8003\u8fc7\u7a0b"},"\u601d\u8003\u8fc7\u7a0b"),(0,o.kt)("h3",{id:"\u9898\u89e3\u53c2\u8003\u4e8c\u5206\u67e5\u627e"},"\u9898\u89e3\u53c2\u8003\uff0c\u4e8c\u5206\u67e5\u627e"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"var findMedianSortedArrays = function (nums1, nums2) {\n  const length1 = nums1.length;\n  const length2 = nums2.length;\n  const totalLength = length1 + length2;\n  if (totalLength % 2 === 1) {\n    // \u5947\u6570\n    const midIndex = Math.floor(totalLength / 2);\n    return getKthElement(nums1, nums2, midIndex + 1);\n  } else {\n    // \u5076\u6570\n    const midIndex1 = Math.floor(totalLength / 2) - 1;\n    const midIndex2 = Math.floor(totalLength / 2);\n    return (\n      (getKthElement(nums1, nums2, midIndex1 + 1) +\n        getKthElement(nums1, nums2, midIndex2 + 1)) /\n      2\n    );\n  }\n};\n\n/**\n * \u601d\u8def\uff1a\n *      \u627e\u5230\u7b2ck\u5c0f\u7684\u5143\u7d20\uff0c\u5206\u522b\u53d6nums1\u548cnums2\u7684\u7b2c k / 2 -1 \u4e2a\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\n *      \u5b9a\u4e49\uff1a\n *          pivot1 = Math.floor(nums1[k/2]) - 1\n *          pivot2 = Math.floor(nums2[k/2]) - 1\n *      \u82e5 pivot1 < pivot2\n *          \u5219\u5220\u9664nums1\u4e0b\uff0c\u524d k /2 - 1 \u4e2a\u5143\u7d20\uff0c\u5e76\u6839\u636e\u66f4\u65b0\u540e\u7684\u6570\u7ec4\u91cd\u65b0\u8c03\u6574 k \u7684\u503c\n *      \u53cd\u4e4b\uff0c\u540c\u7406\n */\nfunction getKthElement(nums1, nums2, k) {\n  const length1 = nums1.length;\n  const length2 = nums2.length;\n  let index1 = 0;\n  let index2 = 0;\n\n  while (true) {\n    if (index1 === length1) {\n      return nums2[index2 + k - 1];\n    }\n    if (index2 === length2) {\n      return nums1[index1 + k - 1];\n    }\n    if (k === 1) {\n      return Math.min(nums1[index1], nums2[index2]);\n    }\n\n    const half = Math.floor(k / 2);\n    const newIndex1 = Math.min(index1 + half, length1) - 1;\n    const newIndex2 = Math.min(index2 + half, length2) - 1;\n    const pivot1 = nums1[newIndex1];\n    const pivot2 = nums2[newIndex2];\n\n    if (pivot1 <= pivot2) {\n      k -= newIndex1 - index1 + 1;\n      index1 = newIndex1 + 1;\n    } else {\n      k -= newIndex2 - index2 + 1;\n      index2 = newIndex2 + 1;\n    }\n  }\n}\n")))}s.isMDXComponent=!0}}]);