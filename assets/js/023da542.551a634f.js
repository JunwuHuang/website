"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6609],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return b}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=u(t),b=i,d=f["".concat(c,".").concat(b)]||f[b]||s[b]||o;return t?r.createElement(d,a(a({ref:n},p),{},{components:t})):r.createElement(d,a({ref:n},p))}));function b(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=f;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},5397:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return a},default:function(){return p},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return c}});var r=t(3117),i=(t(7294),t(3905));const o={},a="\u6700\u957f\u56de\u6587\u5b50\u4e32",l={type:"mdx",permalink:"/website/leetcode/longest-palindromic-substring/",source:"@site/src/pages/leetcode/longest-palindromic-substring/index.md",title:"\u6700\u957f\u56de\u6587\u5b50\u4e32",description:"2022/05/29",frontMatter:{}},c=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:2},{value:"\u793a\u4f8b\u4e00",id:"\u793a\u4f8b\u4e00",level:3},{value:"\u793a\u4f8b\u4e8c",id:"\u793a\u4f8b\u4e8c",level:3},{value:"\u601d\u8003\u8fc7\u7a0b",id:"\u601d\u8003\u8fc7\u7a0b",level:2},{value:"\u9898\u89e3\u53c2\u8003\uff0c\u52a8\u6001\u89c4\u5212",id:"\u9898\u89e3\u53c2\u8003\u52a8\u6001\u89c4\u5212",level:3}],u={toc:c};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u6700\u957f\u56de\u6587\u5b50\u4e32"},"\u6700\u957f\u56de\u6587\u5b50\u4e32"),(0,i.kt)("p",null,"2022/05/29"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/longest-palindromic-substring/"},"https://leetcode.cn/problems/longest-palindromic-substring/"))),(0,i.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,i.kt)("h3",{id:"\u793a\u4f8b\u4e00"},"\u793a\u4f8b\u4e00"),(0,i.kt)("p",null,'\u8f93\u5165\uff1as = "babad"\n\u8f93\u51fa\uff1a"bab"\n\u89e3\u91ca\uff1a"aba" \u540c\u6837\u662f\u7b26\u5408\u9898\u610f\u7684\u7b54\u6848\u3002'),(0,i.kt)("h3",{id:"\u793a\u4f8b\u4e8c"},"\u793a\u4f8b\u4e8c"),(0,i.kt)("p",null,'\u8f93\u5165\uff1as = "cbbd"\n\u8f93\u51fa\uff1a"bb"'),(0,i.kt)("h2",{id:"\u601d\u8003\u8fc7\u7a0b"},"\u601d\u8003\u8fc7\u7a0b"),(0,i.kt)("h3",{id:"\u9898\u89e3\u53c2\u8003\u52a8\u6001\u89c4\u5212"},"\u9898\u89e3\u53c2\u8003\uff0c\u52a8\u6001\u89c4\u5212"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'var longestPalindrome = function (s) {\n  const len = s.length;\n  // \u5982\u679c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a1\uff0c\u5219\u56de\u6587\u5b50\u4e32\u4e3a\u672c\u8eab\n  if (len < 2) {\n    return s;\n  }\n  const dp = [];\n  let maxLen = 1;\n  let begin = 0;\n\n  for (let i = 0; i < len; i++) {\n    if (!dp[i]) {\n      dp[i] = [];\n    }\n    dp[i][i] = true;\n  }\n\n  const charArray = s.split("");\n\n  // \u5047\u8bbe\u5b50\u4e32\u957f\u5ea6\u4e3aL\n  for (let L = 2; L <= len; L++) {\n    // \u7b2ci\u4e2a\u5b57\u6bcd\n    for (let i = 0; i < len; i++) {\n      // j\u4e3a\u7b2ci\u4e2a\u5b57\u6bcd\u52a0\u4e0a\u5b50\u4e32\u957f\u5ea6L - 1\n      const j = L - 1 + i;\n      // \u5f53j\u5927\u4e8e\u7b49\u4e8e\u5b57\u7b26\u4e32\u7684\u65f6\u5019\uff0c\u5219\u83b7\u53d6\u4e0d\u5230\u5b57\u7b26\uff0c\u5373\u7ed3\u675f\u904d\u5386\n      if (j >= len) {\n        break;\n      }\n      // \u7b2ci\u4e2a\u5b57\u6bcd\u4e0e\u7b2cj\u4e2a\u5b57\u6bcd\u4e0d\u540c\uff0c\u5219continue\n      if (charArray[i] !== charArray[j]) {\n        dp[i][j] = false;\n        continue;\n      } else {\n        // \u82e5\u7b2ci\u4e2a\u5b57\u6bcd\u4e0e\u7b2cj\u4e2a\u5b57\u6bcd\u7684\u8ddd\u79bb\u5c0f\u4e8e3\u7684\u60c5\u51b5\uff1a\n        // babad\u4e2d\u7684: bab\n        // cbbd\u4e2d\u7684: bb\n        if (j - i < 3) {\n          dp[i][j] = true;\n        } else {\n          // \u5426\u5219\u518d\u5224\u65ad\u5185\u4e00\u5c42\u7684\u5b57\u7b26\u662f\u5426\u76f8\u7b49(\u56de\u6587\u89c4\u5219)\n          // ababa\u4e2d\uff0c\u7b2c0\u4e2a\u5b57\u7b26\u4e0e\u7b2c4\u4e2a\u5b57\u7b26\u76f8\u7b49\uff0c\u63a5\u7740\u5224\u65ad\u7b2c1\u4e2a\u5b57\u7b26\u4e0e\u7b2c3\u4e2a\u5b57\u7b26\u662f\u5426\u76f8\u7b49\n          // \u82e5\u4e0d\u76f8\u7b49\uff0c\u8bf4\u660e0\u52304\u7684\u8fd9\u4e32\u5b57\u7b26\u4e32\u4e0d\u662f\u56de\u6587\n          dp[i][j] = dp[i + 1][j - 1];\n        }\n      }\n      // s[i:j]\u662f\u56de\u6587\u4e32\uff0c\u5224\u65ad\u5176\u957f\u5ea6\u662f\u5426\u5927\u4e8e\u5f53\u524d\u8bb0\u5f55\u7684maxLen\uff0c\u662f\u7684\u8bdd\u5219\u66f4\u65b0maxLen\u4e0ebegin\n      if (dp[i][j] && j - i + 1 > maxLen) {\n        maxLen = j - i + 1;\n        begin = i;\n      }\n    }\n  }\n\n  // \u4ece\u5b57\u7b26\u4e32s\u4e2d\u622a\u53d6begin\u5230begin + maxLen\u7684\u5b50\u4e32\uff0c\u5219\u662f\u6700\u957f\u56de\u6587\u5b50\u4e32\n  return s.substring(begin, begin + maxLen);\n};\n')))}p.isMDXComponent=!0}}]);